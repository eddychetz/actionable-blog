---
title: "Sales Demand Forecasting"
author: "Eddwin Cheteni"
date: "2023-01-23"
code-fold: true
title-block-banner: backgrnd.gif
code-summary: "Click here to view code"
categories: 
    - machine learning
    - time series analysis 
    - business science
    - predictive analytics
---

## **Project Overview**

The growth of supermarkets in most populated cities is increasing and market competitions are also high. The dataset is one of the historical sales of supermarket company which has recorded in 3 different branches for 3 months data. Predictive data analytics methods are easy to apply to this dataset. The data used can be downloaded [here](https://www.kaggle.com/datasets/aungpyaeap/supermarket-sales/download?datasetVersionNumber=3).

```{r}
#| echo: false
#| message: false
#| warning: false


# Data Exploration
library(tidyverse) # core
library(skimr) # descriptive summary
library(lubridate) # date manipulation
library(tidytext) # text manipulation
library(timetk) # time series
library(gt) # format table output
library(dataxray) # quick exploration
# color pallete
library(tidyquant) # quantitative analysis

# modeling
library(tidymodels) # ML models
library(modeltime) # time series models

# Visualization
library(ggplot2)
library(correlationfunnel) # correlation analysis
```

## 1. Prepare Data

### 1.1 Import Data

Loading the `supermarket_sales` dataset

```{r}
#| echo: true
#| message: false
#| warning: false

data <- read_csv("./supermarket_sales.csv", 
      
    # recast `Date` and `Time` column data types
    col_types = cols(Date = col_date(format = "%m/%d/%Y"), 
        Time = col_time(format = "%H:%M")))%>%
  
  # recast character to factor data type columns
    mutate_if(is.character, as_factor)%>%
  
    # Renaming Columns: set_names()
    set_names(names(.) %>% str_replace_all(" ","_"))
```

```{r}
#| echo: true
#| message: false
#| warning: false


# view first 5 rows of the dataset
data %>%
  head() %>%
  gt() %>%
  tab_header(
    title = "View First 5 Rows of Supermarket Sales Data"
  )
```

***Clean Data***

We first need to inspect the data using `skimr` in order to check the **Data Quality**.

```{r}
#| echo: true
#| message: false
#| warning: false

skim(data)
```

### 1.2 Explore

#### ***1.2.1 Sales by Product Line***

::: callout-tip
***Q. Possible business question:***

1.  Which product line generates high sales volume?

2.  Which product line generates low sales volume?
:::

```{r}
#| echo: true
#| message: false
#| warning: false

# prepare data
prdctline_plot <- data%>%
  group_by(Product_line)%>%
  summarise(total_sales = sum(Total))%>%
  arrange(desc(total_sales), .by_group = TRUE)%>%
  mutate(sales_text = scales::dollar(total_sales))

# visualize data
prdctline_plot%>%
  ggplot(aes(x = Product_line, y = total_sales))+
  geom_col(aes(fill = Product_line))+
  # facet_wrap(~Gender)+
  coord_flip()+
  geom_label(aes(label = sales_text, label.padding = 1.5, hjust =1))
```

Some group of products experience high sales while others get low sales volume. *Sports and travel*, and *Food and beverages* have more than \$55 000 of total sales while *Health and beauty* side indicates sales below \$50 000. The Supermarket might be interested in boosting *Health and beauty* sales as revealed by the above visualization.

Let's consider other features and identify patterns and trends in the product infrmation.

#### ***1.2.2 Sales by Branch***

```{r}
#| echo: true
#| message: false
#| warning: false

# prepare data
data %>% 
  group_by(Branch)%>%
  summarise(total_sales = sum(Total))%>%
  ungroup()%>%
  mutate(sales_text = scales::dollar(total_sales)) %>%
  ggplot(aes(x = Branch, y = total_sales))+
  geom_col(aes(fill = Branch))+
  geom_label(aes(label = sales_text, label.padding = 1.5))
```

***Sales by Customer Type***

```{r}
#| echo: true
#| message: false
#| warning: false

data %>% 
  group_by(Customer_type)%>%
  summarise(total_sales = sum(Total))%>%
  ungroup()%>%
  # mutate(sales_text = scales::dollar(total_sales)) %>%
  gt(rowname_col = "table")
```

***Sales by City***

```{r}
#| echo: true
#| message: false
#| warning: false
data %>% 
  group_by(City)%>%
  summarise(total_sales = sum(Total))%>%
  ungroup()%>%
  mutate(sales_text = scales::dollar(total_sales)) %>%
  ggplot(aes(x = City, y = total_sales))+
  geom_col(aes(fill = City))+
  geom_label(aes(label = sales_text, label.padding = 1.5))
```

***Sales by Payment Type***

```{r}
#| echo: true
#| message: false
#| warning: false

data %>% 
  group_by(Payment)%>%
  summarise(total_sales = sum(Total))%>%
  ungroup()%>%
  mutate(sales_text = scales::dollar(total_sales)) %>%
    ggplot(aes(x = Payment, y = total_sales))+
  geom_col(aes(fill = Payment))+
  geom_label(aes(label = sales_text, label.padding = 1.5))
```

### 1.3 Split

```{r}
#| echo: true
#| message: false
#| warning: false


```

## 2. Build Model

### 2.1 Baseline

```{r}
#| echo: true
#| message: false
#| warning: false


```

### 2.2 Iterate

```{r}
#| echo: true
#| message: false
#| warning: false


```

### 2.3 Evaluate

```{r}
#| echo: true
#| message: false
#| warning: false


```

## 3. Communicate Results

```{r}
#| echo: true
#| message: false
#| warning: false

```
